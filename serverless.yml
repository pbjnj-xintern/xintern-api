service: xintern-reviews-api
#app: your-app-name
#tenant: your-tenant-name

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-2
  environment:
    MONGO_URL: "${self:custom.tokens.MONGO_TEST}"
    TOKEN_SECRET: "${self:custom.tokens.TOKEN_SECRET}"

package:
  exclude:
    - tokens.yml

plugins:
  - serverless-domain-manager

custom:
  stage: ${opt:stage, self:provider.stage}
  tokens: ${file(tokens.yml):${self:custom.stage}}
  customDomain:
    domainName: 'api.xintern.co'
    basePath: 'review' # This will be prefixed to all routes
    stage: ${self:provider.stage}
    createRoute53Record: true


functions:
# ==================================
# REVIEW FUNCTIONS START
# ==================================
  getUpvotedReviewsByUserId:
      handler: review-handler.getUpvotedReviewsByUserId
      events:
        - http:
            path: /upvoted
            method: GET
            cors: true
  getDownvotedReviewsByUserId:
      handler: review-handler.getDownvotedReviewsByUserId
      events:
        - http:
            path: /downvoted
            method: GET
            cors: true

  getReviewById:
    handler: review-handler.getReviewById
    events:
      - http:
          path: /{review_id}
          method: GET
          request:
            parameters:
              paths:
                review_id: true
          cors: true

  createReview:
    handler: review-handler.createReview
    events:
      - http:
          path: /
          method: POST
          cors: true

  updateReview:
    handler: review-handler.updateReview
    events:
      - http:
          path: /{review_id}
          method: PATCH
          request:
            parameters:
              paths:
                review_id: true
          cors: true
  
  getFlaggedReviews:
    handler: review-handler.getFlaggedReviews
    events:
      - http:
          path: /create
          method: GET
          cors: true

  updateRating:
    handler: review-handler.updateRating
    events:
      - http:
          path: /{review_id}/rating/{rating_id}
          method: PATCH
          request:
            parameters:
              paths:
                review_id: true
                rating_id: true
          cors: true

  getPopulatedReviews:
    handler: review-handler.getPopulatedReviews
    events:
      - http:
          path: /populated-review/{review_id}
          method: GET
          request:
            parameters:
              paths:
                review_id: true
          cors: true
  deleteReview:
    handler: review-handler.deleteReview
    events:
      - http:
          path: /{review_id}
          method: DELETE
          request:
            parameters:
              paths:
                review_id: true
          cors: true
  getRecentReviews:
    handler: review-handler.getRecentReviews
    events:
      - http:
          path: /recent
          method: GET
          cors: true
  getAllPositions:
    handler: review-handler.getAllPositions
    events:
      - http:
          path: /positions
          method: GET
          cors: true
  getReviewsByPosition:
    handler: review-handler.getReviewsByPosition
    events:
      - http:
          path: /position-name/{position}
          method: GET
          request:
            parameters:
              paths:
                position: true
          cors: true
  getPositionsByName:
    handler: review-handler.getPositionsByName
    events:
      - http:
          path: /positions/{position}
          method: GET
          request:
            parameters:
              paths:
                position: true
          cors: true
  getReviewsByCompany:
    handler: review-handler.getReviewsByCompany
    events:
      - http:
          path: /company/{company_name}
          method: GET
          request:
            parameters:
              paths:
                company_name: true
          cors: true
# ==================================
# REVIEW FUNCTIONS END
# ==================================

# ==================================
# COMMENT FUNCTIONS
# ==================================


  getCommentsByUsername:
    handler: comment-handler.getCommentsByUsername
    events:
      - http:
          path: /user/comment/{username}
          method: GET
          request:
            parameters:
              paths:
                username: true
          cors: true

  getUpvotedCommentsByUserId:
        handler: comment-handler.getUpvotedCommentsByUserId
        events:
          - http:
              path: /comments/upvotes
              method: GET
              cors: true
  
  getDownvotedCommentsByUserId:
        handler: comment-handler.getDownvotedCommentsByUserId
        events:
          - http:
              path: /comments/downvotes
              method: GET
              cors: true
  deleteComment:
    handler: comment-handler.deleteComment
    events:
      - http:
          path: /comment/{comment_id}
          method: PATCH
          request:
            parameters:
              paths:
                comment_id: true
          cors: true
  createComment:
    handler: comment-handler.createComment
    events:
      - http:
          path: /{review_id}/comment
          method: POST
          request:
            parameters:
              paths:
                review_id: true
          cors: true
  updateComment:
    handler: comment-handler.updateComment
    events:
      - http:
          path: /{review_id}/comment/{comment_id}
          method: PATCH
          request:
            parameters:
              paths:
                review_id: true
                comment_id: true
          cors: true
  getPopulatedComments:
    handler: comment-handler.getPopulatedComments
    events:
      - http:
          path: /{review_id}/comments
          method: GET
          request:
            parameters:
              paths:
                review_id: true
          cors: true

# ==================================
# COMMENT FUNCTIONS END
# ==================================

# ==================================
# VOTE AND FLAG FUNCTIONS START
# ==================================
  
  upvoteReview:
    handler: vote-and-flag-handler.upvoteReview
    events:
      - http:
          path: /{review_id}/upvote
          method: PATCH
          request:
            parameters:
              paths:
                review_id: true
          cors: true

  downvoteReview:
    handler: vote-and-flag-handler.downvoteReview
    events:
      - http:
          path: /{review_id}/downvote
          method: PATCH
          request:
            parameters:
              paths:
                review_id: true
          cors: true

  upvoteComment:
    handler: vote-and-flag-handler.upvoteComment
    events:
      - http:
          path: /{review_id}/comment/{comment_id}/upvote
          method: PATCH
          request:
            parameters:
              paths:
                review_id: true
                comment_id: true
          cors: true

  downvoteComment:
    handler: vote-and-flag-handler.downvoteComment
    events:
      - http:
          path: /{review_id}/comment/{comment_id}/downvote
          method: PATCH
          request:
            parameters:
              paths:
                review_id: true
                comment_id: true
          cors: true

  flagReview:
    handler: vote-and-flag-handler.flagReview
    events:
      - http:
          path: /{review_id}/flag
          method: PATCH
          cors: true
  flagComment:
    handler: vote-and-flag-handler.flagComment
    events:
      - http:
          path: /{review_id}/comment/{comment_id}/flag
          method: PATCH
          cors: true
  

# ==================================
# VOTE AND FLAG FUNCTIONS END
# ==================================